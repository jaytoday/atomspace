#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
The Syntax of Axioms
\end_layout

\begin_layout Author
Linas Vepštas
\end_layout

\begin_layout Date
4 July 2025
\end_layout

\begin_layout Abstract
This text examines some practical notational and representational issues
 that arise when one attempts to represent common mathematical axioms as
 if they were the definition of a syntax, from which one might try to generate
 a language of all syntactically valid sentences.
 There are no particular problems if one sets pen to paper; the issues arise
 when trying to develop software.
 The representational framework explored here is that of jigsaws, as that
 seems to be the most generic representation for mathematical structures,
 and has a particularly appealing form for the generation and parsing of
 languages.
\end_layout

\begin_layout Section*
Introduction
\end_layout

\begin_layout Standard
The correspondence between syntax and language is widely understood in many
 different branches of mathematics.
 It is often fairly self–evident, and there are a number of different formalisms
 that attempt to provide a generic description.
\end_layout

\begin_layout Standard
For example, groups are generated from their collection of generators: the
 group itself is the 
\begin_inset Quotes eld
\end_inset

language
\begin_inset Quotes erd
\end_inset

 that is generated.
 The generation itself is subject to the axioms defining a group, plus the
 group presentation.
 If there is no presentation, the free group is generated.
 One can also think of a group as being the free group modulo it's presentation.
\end_layout

\begin_layout Standard
A more general conception of this sort arises in term algebras.
 There, one has a collection of terms, say 
\begin_inset Formula $\left\{ f\left(x,y,z\right),g\left(x,y\right),\cdots,h\left(x,y,z,w\right)\right\} $
\end_inset

 and a collection of constants 
\begin_inset Formula $\left\{ c_{1},c_{2},\cdots,c_{n}\right\} $
\end_inset

 and one freely composes these to form all finite trees: this is the language
 generated by the term algebra.
 In model theory, one has the same idea, but also adds relations: these
 are predicates 
\begin_inset Formula $\left\{ r_{1}\left(x,y\right),r_{2}\left(w,x,z\right),\cdots\right\} $
\end_inset

 that evaluate to crisp true–false values, and thus can be freely combined
 with the conventional logical operators 
\begin_inset Formula $\lnot,\wedge,\vee$
\end_inset

 to form logical sentences.
 The result of composing terms with predicates, and then combining these
 with logical operators gives the freely generated language.
 Squinting a bit, it is not hard to see that the generated objects are trees.
\end_layout

\begin_layout Standard
A related notion arises in proof theory, where one has a collection of axioms,
 which are then combined with inference rules.
 Combining these freely usually results in fragments of proofs; one has
 a complete and valid proof if the generation terminates and results in
 a single value 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Of course, one definition of generic syntax and generic language if provided
 by Chomsky, who shows how to define a collection of production rules, that,
 when iterated on and freely combined, generates a language.
\end_layout

\begin_layout Standard
The above gives five distinct examples of where some collection of rules
 or terms or symbols can be iterated on, multiplied, combined or composed,
 with varying degrees of freedom, to generate a language.
 In each specific domain, there are no particular difficulties in doing
 so.
 The core reason for the absence of difficulties is because humans, the
 mathematicians, invent a collection of symbols that can be written on pieces
 of paper, and the meaning of each symbol, and the method of combining it
 with others, can be explained with words that are meaningful to the reader.
\end_layout

\begin_layout Standard
The exploration performed in this text is the construction of a generic
 system for representing all these different systems in such a way that
 the generation can proceed algorithmically.
 This presupposes that there is some simple way of encoding these systems
 in some computer–friendly, algorithm–friendly form.
 There is a relatively well–known way of doing this, and it will be reviewed
 next.
 The bulk of this text will consist of exploring a large collection of axioms
 taken from different branches of mathematics, and examining how they get
 encoded.
 The hope is that a programming reference can arise from this work.
\end_layout

\end_body
\end_document
